/*
 * Created on 20 mars 2014 ( Time 12:14:05 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */

package org.demo;

import org.springframework.context.MessageSource;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.support.ResourceBundleMessageSource;
import org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;

import org.demo.validator.ShopValidator;
import org.demo.validator.AuthorValidator;
import org.demo.validator.BookValidator;
import org.demo.validator.WorkgroupValidator;
import org.demo.validator.PublisherValidator;
import org.demo.validator.BadgeValidator;
import org.demo.validator.EmployeeGroupValidator;
import org.demo.repository.converter.EmployeeGroupKeyConverter;
import org.demo.validator.CountryValidator;
import org.demo.validator.SynopsisValidator;
import org.demo.validator.CustomerValidator;
import org.demo.validator.BookOrderValidator;
import org.demo.validator.ReviewValidator;
import org.demo.repository.converter.ReviewKeyConverter;
import org.demo.validator.EmployeeValidator;
import org.demo.validator.BookOrderItemValidator;
import org.demo.repository.converter.BookOrderItemKeyConverter;
import org.springframework.core.convert.support.ConfigurableConversionService;

/**
 * Application configuration.
 * ( messages resources, validators)
 * @author Telosys Tools Generator
 *
 */
@Configuration
@ComponentScan(basePackageClasses = ApplicationConfig.class)
@EnableWebMvc
public class ApplicationConfig extends RepositoryRestMvcConfiguration {

    /**
     * Message Ressource declaration.
     * @return MessageRessource
     */
    @Bean
    public MessageSource messageSource() {
        ResourceBundleMessageSource source = new ResourceBundleMessageSource();
        source.setBasename("i18n/messages");
        source.setUseCodeAsDefaultMessage(true);
        return source;
    }

   /**
     * Validator declaration for Shop
     * @return the ShopValidator
     */
    @Bean
    public ShopValidator beforeCreateShopValidator() {
        return new ShopValidator();
    }
   /**
     * Validator declaration for Author
     * @return the AuthorValidator
     */
    @Bean
    public AuthorValidator beforeCreateAuthorValidator() {
        return new AuthorValidator();
    }
   /**
     * Validator declaration for Book
     * @return the BookValidator
     */
    @Bean
    public BookValidator beforeCreateBookValidator() {
        return new BookValidator();
    }
   /**
     * Validator declaration for Workgroup
     * @return the WorkgroupValidator
     */
    @Bean
    public WorkgroupValidator beforeCreateWorkgroupValidator() {
        return new WorkgroupValidator();
    }
   /**
     * Validator declaration for Publisher
     * @return the PublisherValidator
     */
    @Bean
    public PublisherValidator beforeCreatePublisherValidator() {
        return new PublisherValidator();
    }
   /**
     * Validator declaration for Badge
     * @return the BadgeValidator
     */
    @Bean
    public BadgeValidator beforeCreateBadgeValidator() {
        return new BadgeValidator();
    }
   /**
     * Validator declaration for EmployeeGroup
     * @return the EmployeeGroupValidator
     */
    @Bean
    public EmployeeGroupValidator beforeCreateEmployeeGroupValidator() {
        return new EmployeeGroupValidator();
    }
   /**
     * Validator declaration for Country
     * @return the CountryValidator
     */
    @Bean
    public CountryValidator beforeCreateCountryValidator() {
        return new CountryValidator();
    }
   /**
     * Validator declaration for Synopsis
     * @return the SynopsisValidator
     */
    @Bean
    public SynopsisValidator beforeCreateSynopsisValidator() {
        return new SynopsisValidator();
    }
   /**
     * Validator declaration for Customer
     * @return the CustomerValidator
     */
    @Bean
    public CustomerValidator beforeCreateCustomerValidator() {
        return new CustomerValidator();
    }
   /**
     * Validator declaration for BookOrder
     * @return the BookOrderValidator
     */
    @Bean
    public BookOrderValidator beforeCreateBookOrderValidator() {
        return new BookOrderValidator();
    }
   /**
     * Validator declaration for Review
     * @return the ReviewValidator
     */
    @Bean
    public ReviewValidator beforeCreateReviewValidator() {
        return new ReviewValidator();
    }
   /**
     * Validator declaration for Employee
     * @return the EmployeeValidator
     */
    @Bean
    public EmployeeValidator beforeCreateEmployeeValidator() {
        return new EmployeeValidator();
    }
   /**
     * Validator declaration for BookOrderItem
     * @return the BookOrderItemValidator
     */
    @Bean
    public BookOrderItemValidator beforeCreateBookOrderItemValidator() {
        return new BookOrderItemValidator();
    }

    /**
     * Add all converters for composite keys
     */
	@Override
	protected void configureConversionService(ConfigurableConversionService conversionService) {
		super.configureConversionService(conversionService);
		conversionService.addConverter(this.employeegroupKeyConverter());
		conversionService.addConverter(this.reviewKeyConverter());
		conversionService.addConverter(this.bookorderitemKeyConverter());
	}

	/**
     * Converter for the composite key in the EmployeeGroup entity
     * @return the converter
     */
    @Bean
    public EmployeeGroupKeyConverter employeegroupKeyConverter() {
    	return new EmployeeGroupKeyConverter();
    }
	/**
     * Converter for the composite key in the Review entity
     * @return the converter
     */
    @Bean
    public ReviewKeyConverter reviewKeyConverter() {
    	return new ReviewKeyConverter();
    }
	/**
     * Converter for the composite key in the BookOrderItem entity
     * @return the converter
     */
    @Bean
    public BookOrderItemKeyConverter bookorderitemKeyConverter() {
    	return new BookOrderItemKeyConverter();
    }

}